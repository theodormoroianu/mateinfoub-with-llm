[
  {
    "name": "Ediția 2024",
    "probleme": [
      {
        "titlu": "Koningsberg",
        "enunt_markdown": "\nSe dă harta alăturată.\n\nHarta reprezintă un râu (albastru), două maluri și patru insule (verde), precum și opt poduri (negru).\n\nCare este numărul minim de poduri ce trebuie construite astfel încât un turist să poată traversa toate podurile exact o dată?\n\n**Atenție:** turistul își poate începe traseul oriunde dorește (pe un mal sau pe o insulă) și, de asemenea, poate termina traseul oriunde dorește.",
        "imagine": "./images/2024-koningsberg.png",
        "variante": [
          0,
          1,
          2,
          3,
          4
        ],
        "raspuns": 1,
        "dificultate": "usor"
      },
      {
        "titlu": "Buseala",
        "enunt_markdown": "\nSe dă următoarea secvență de cod:\n\n```c++\nint n = 3;\nfor (int i = 0; i < n; i--) {\n    cout << '$';\n}\n```\n\nCare din următoarele modificări va face codul să afișeze exact de 3 ori caracterul dolar (i.e., \"$$$\")?\n\n1. înlocuim \"n = 3\" cu \"n = -3\"\n2. înlocuim \"int i = 0\" cu \"long i = 0\"\n3. înlocuim \"i < n\" cu \"-i < n\"\n4. înlocuim \"i < n\" cu \"i + n\"\n5. înlocuim \"i--\" cu \"n--\"\n6. înlocuim \"cout << '$'\" cu \"cout << \"$$$\"\"\n",
        "variante": [
          "1, 2 si 3.",
          "2, 3 si 4.",
          "3, 4 si 5.",
          "3, 5 si 6.",
          "1, 3 si 6."
        ],
        "raspuns": "3, 4 si 5.",
        "dificultate": "usor"
      },
      {
        "titlu": "Text",
        "enunt_markdown": "\nSe dă următoarea listă de cuvinte:\n\n```c++\nchar cuvinte[10][5] = {\n  \"mate\",\n  \"buri\",\n  \"mute\",\n  \"mese\",\n  \"cute\",\n  \"mare\",\n  \"iute\",\n  \"sute\",\n  \"sate\",\n  \"muri\"\n};\n```\n\nDouă cuvinte sunt _similare_ dacă sunt exact la o literă distanță (adică se poate schimba exact o literă din primul cuvânt astfel încât el să devină egal cu al doilea cuvânt). De exemplu, \"abab\" este similar cu \"abbb\", dar \"aaaa\" nu este similar cu \"aabb\" și de asemenea \"aaaa\" nu este similar cu \"aaaa\".\n\nCâte perechi neordonate (perechea (a, b) este considerată egală cu perechea (b, a)) de cuvinte similar există?\n",
        "variante": [
          3,
          7,
          11,
          15,
          19
        ],
        "raspuns": 11,
        "dificultate": "usor"
      },
      {
        "titlu": "APM-uri",
        "enunt_markdown": "\nCâți arbori parțiali de cost minim are următorul graf?\n",
        "imagine": "./images/2024-APM-uri.png",
        "variante": [
          6,
          5,
          7,
          3,
          9
        ],
        "raspuns": 7,
        "dificultate": "usor"
      },
      {
        "titlu": "Bilete norocoase",
        "enunt_markdown": "\nAlexandrina, fiind pasionată de transport public, a cumpărat 1 milion de bilete de autobuz, având coduri distincte între ele, formate din exact 6 cifre. Un bilet este considerat norocos dacă suma primelor 3 cifre ale sale este egală cu suma ultimelor 3. De exemplu, biletul cu codul 000013 are suma primelor 3 cifre egală 0 și suma ultimelor 3 cifre egală cu 4.\n\nAjutați-o pe Alexandrina să numere câte bilete norocoase deține!\n",
        "variante": [
          50412,
          55252,
          57823,
          49575,
          45198
        ],
        "raspuns": 55252,
        "dificultate": "usor"
      },
      {
        "titlu": "Cel mai mic număr",
        "enunt_markdown": "\nMarius i-a cumpărat fetiței sale, Luna, un calculator de jucărie. În mod curios, acest calculator are un procesor care funcționează pe 10 biți. O variabilă de tip număr real păstrează valoarea sa în următorul format: `$$m \\ \\times \\ 2^{-e}$$`, unde m și e sunt numere naturale a căror reprezentare binară este păstrată în variabilă. Mai exact primii 3 biți semnificativi reprezintă valoarea lui e și următorii 7 reprezintă valoarea lui m.\n\nDe exemplu, variabila x dată prin secvența de biți 1010101010 reprezintă numărul:\n```KaTeX\n(32 \\ + \\ 8 \\ + \\ 2) \\ \\times \\ 2^{-5} \\ = \\ 1.3125\n```\n\nMarius îi dă următoarea temă Lunei: care este cea mai mică valoare nenulă care poate fi reprezentată de o variabilă în noua ei jucărie? O puteți ajuta?\n",
        "variante": [
          0.001,
          0.0078125,
          0.00390625,
          0.005859375,
          0.015625
        ],
        "raspuns": 0.0078125,
        "dificultate": "usor"
      },
      {
        "titlu": "Tastatură rotundă",
        "enunt_markdown": "\nLa ora de design hardware, Teo inventează o tastatură circulară care conține cifrele de la 0 la 9 în ordine crescătoare și un ac care indică către una dintre ele. Această tastatură poate face de oricâte ori una dintre următoarele două operații:\n\n1. să scrie pe ecran o dată cifra către care indică acul\n2. mută acul pe poziția succesoare (dacă acul arăta către 0, va fi mutat către cifra 1; dacă arăta către 9, va fi mutat către cifra 0)\n\nInițial acul arată către cifra 0. Care este numărul **minim** de operații de care este nevoie pentru a scrie pe ecran numărul 11052024?\n",
        "variante": [
          41,
          42,
          43,
          44,
          45
        ],
        "raspuns": 42,
        "dificultate": "usor"
      },
      {
        "titlu": "Sockets",
        "enunt_markdown": "\nÎn datacenter-ul UniBuc, un server A de calcul științific pornește o conexiune către un serviciu extern o dată la 17 **secunde**. Un alt server B pornește câte o conexiune o dată la 21 **secunde**.\n\nAlexandru, noul tehnician-șef al datacenter-ului, a făcut un program care monitorizează numărul de conexiuni pornite la orice moment de timp. Știind că fiecare conexiune rămâne deschisă exact 5 **minute** de la pornire, care este numărul maxim de conexiuni care pot exista simultan?\n",
        "variante": [
          29,
          30,
          31,
          32,
          33
        ],
        "raspuns": 33,
        "dificultate": "usor"
      },
      {
        "titlu": "Alianțe",
        "enunt_markdown": "\nȘtefan împreună cu cei 23 de prieteni ai săi joacă un joc de strategie.\n\nAceștia primesc un ID unic în cadrul jocului, un număr din intervalul [2, N+1] unde N este numărul de jucători.\n\nJucătorii formează alianțe astfel: doi jucători sunt în aceeași alianță dacă ID-urile lor au același număr de divizori (de exemplu jucătorul cu ID-ul 2 este în aceeași alianță cu jucătorul cu ID-ul 3). Comunicarea este foarte importantă în acest joc, iar după stabilirea alianțelor doar membrii aceleiași alianțe pot stabili conexiuni securizate bidirecționale între ei prin care comunică.\n\nCare este numărul total de conexiuni securizate ce se pot stabili?\n",
        "variante": [
          63,
          61,
          62,
          65,
          64
        ],
        "raspuns": 63,
        "dificultate": "usor"
      },
      {
        "titlu": "Cifre distincte",
        "enunt_markdown": "\nMara este pasionată de numere. După ce a analizat foarte multe tipuri de numere\n(pare/impare, prime, palindrom, pătrate perfecte etc.)\nși-a dat seama că favoritele ei sunt numerele cu toate cifrele distincte care nu conțin cifra 0.\n\nMara a făcut o groază de studii pentru numerele scrise în baza 10 dar acum este curioasă ce se întâmplă în alte baze de numerație. De exemplu, pentru baza 2 și-a dat seama că îi place doar un număr, iar pentru baza 3 îi plac 4 numere.\n\nCâte numere o să-i placă Marei pentru baza 5?\n",
        "variante": [
          31,
          68,
          15,
          64,
          260
        ],
        "raspuns": 64,
        "dificultate": "usor"
      },
      {
        "titlu": "Copăcel",
        "enunt_markdown": "\nComanda copăcel afișează structura directoarelor. De exemplu, dacă avem un director A care conține directoarele B, C si D, directorul B conține directoarele E si F, iar directorul D conține directorul G, atunci rezultatul comenzii copăcel va arăta în felul următor:\n\n```c++\n> copacel A\nA\n|-- B\n|   |-- E\n|   |-- F\n|-- C\n|-- D\n    |-- G\n\n7 directories,  0 files\n```\n\nÎn exemplul de mai sus, directoarele C, E, F și G sunt goale.\n\nLa linkul <a href=\"data/2024-tree.txt\" target=\"_blank\">acesta</a> se află rezultatul rulării comenzii copăcel pe un sistem cu 1500 de directoare (și niciun fișier). Câte din directoarele prezente sunt goale?\n",
        "variante": [
          53,
          164,
          419,
          602,
          734,
          953,
          1231
        ],
        "raspuns": 734,
        "dificultate": "mediu"
      },
      {
        "titlu": "Valize",
        "enunt_markdown": "\nMatei are 6 valize cu capacitățile de 14, 3, 16, 8, 2 si 5 litri. El își alege o submulțime de valize și calculează suma capacităților valizelor alese. Amuzat, Matei observă: _\"Există exact două alegeri posibile ale valizelor care să dea suma aceasta!\"_.\n\nCare este suma maximă a capacităților valizelor alese de Matei?\n",
        "variante": [
          "Este imposibil.",
          5,
          8,
          13,
          19,
          30,
          43
        ],
        "raspuns": 43,
        "dificultate": "mediu"
      },
      {
        "titlu": "Tractoraș",
        "enunt_markdown": "\nCâte numere X între 5 si 999 (inclusiv) au proprietatea că următorul șir de operații se termină:\n\n```c++\nX := numar intre 5 si 999\nY := 1\nWHILE Y != 3:\n    Y = Y * 2 % X\n```\n\nPentru cunoscători, problema cere să se afle pentru câte numere n cuprinse între 5 și 999, numărul 3 este generat de 2 în `(Zn, *)`.\n",
        "variante": [
          0,
          10,
          64,
          134,
          257,
          752,
          989
        ],
        "raspuns": 134,
        "dificultate": "mediu"
      },
      {
        "titlu": "Playlist",
        "enunt_markdown": "\nCecilia dorește să asculte playlist-ul ei preferat în recreația mare care durează 15 minute. Playlist-ul ei este compus din 5 cântece cu următoarele durate:\n1. cântecul 1: 4 minute și 35 de secunde\n2. cântecul 2: 3 minute și 25 de secunde\n3. cântecul 3: 6 minute și 20 de secunde\n4. cântecul 4: 12 minute și 20 de secunde\n5. cântecul 5: 5 minute și 40 de secunde\n\nÎnainte de a începe să asculte playlist-ul, Cecilia va apăsa pe butonul “shuffle” care va amesteca în mod aleatoriu (uniform) cântecele. Care este numărul mediu de cântece pe care Cecilia le poate asculta în totalitate?\n",
        "variante": [
          1.8,
          2.5,
          1.5,
          2.2,
          2.4,
          2.3,
          2.6
        ],
        "raspuns": 1.8,
        "dificultate": "mediu"
      },
      {
        "titlu": "Prietenel",
        "enunt_markdown": "\nPrietenel are 23 de colegi la firma la care lucrează (deci sunt în total 24 de angajați).\n\nEl a construit o rețea cu relațiile de prietenie dintre angajații de la firmă. Astfel, el a numerotat colegii cu numere de la 1 la 23 (pentru el a păstrat numărul 24, pentru că suntem în 2024) și a constatat că există `m` relații de prietenie reciprocă între perechi (neordonate) de angajați de la firma la care lucrează.\n\nSpunem că i este prieten cu j dacă există o relație de prietenie  între i și j (relația de prietenie între i și j fiind reciprocă, dacă i este prieten cu j, atunci și j este prieten cu i). Prietenel și-a făcut lista L1 a prietenilor săi și lista L2 a prietenilor prietenilor lui și a constatat că exact doi colegi ai săi nu se află în niciuna dintre aceste liste.\n\nCare este valoarea minimă și valoarea maximă a lui `m`?\n",
        "variante": [
          "21 și  252",
          "23 și  252",
          "21 și  251",
          "23 și  251",
          "21 și  232",
          "23 și  232",
          "22 și  231"
        ],
        "raspuns": "21 și  252",
        "dificultate": "mediu"
      },
      {
        "titlu": "Turneu Jackpot",
        "enunt_markdown": "\nÎntr-un turneu de table de tip jackpot participă 40 de jucători și sunt premiați cu diverse sume doar primii 4 în funcție de clasamentul final al acestora. Valoarea totală a premiilor este de `10800` de dolari.\n\nDeși cei 4 nu vor primi exact aceeași sumă, în principiu fiecare dintre ei are șansa sa câștige în medie `$$\\frac{10800}{4} \\ = \\ 2700$$` dolari.\n\nTurneul se desfășoară astfel: jucătorii sunt grupați aleator câte doi, joacă o partidă, iar câștigătorii trec în etapa următoare. Astfel după 3 runde rămân 5 jucători A, B, C, D și E.\n\nTeoretic acum, fiecare dintre cei cinci are șansa sa câștige în medie `$$\\frac{10800}{4} \\ = \\ 2160$$` dolari. Pentru a hotărî care vor fi cei 4 finaliști se aleg aleatoriu doi jucători din cei cinci, să zicem D și E, care vor juca o rundă suplimentară, câștigătorul intrând în finala celor 4.\n\nAceastă rundă suplimentară diminuează șansele lui D și E la câștigul teoretic mediu. Cu căt ar trebui compensați D și E din fondul total de premii, înainte de runda suplimentară pe care o vor juca, astfel încât în final șansa la câștigul mediu (oricare ar fi acesta) să rămână aceeași pentru cei cinci?\n",
        "imagine": "./images/2024-jackpot.png",
        "variante": [
          0,
          540,
          720,
          1080,
          1350,
          2160,
          2700
        ],
        "raspuns": 1080,
        "dificultate": "mediu"
      },
      {
        "titlu": "5 Eyes",
        "enunt_markdown": "\nSe consideră următoarea secvență de cod C++, din care lipsește valoarea tabloului de caractere secret:\n\n```c++\n// Lungimea secretului (excluzand '\\0').\nint n = 12;\n\n// Secretul, format din n+1 caractere (incluzand caracterul '\\0').\nchar secret[] = \"????????????\"; // secretul lipseste\n\nfor (int i = 1; i < n; i++)\n    for (int j = 2 * i; j < n; j += i)\n        secret[j] ^= secret[i];\n\nfor (int i = 0; i < n; i++)\n    cout << (int)secret[i] << ' ';\n```\n\nRezultatul rulării codului este următorul șir, de lungime 12:\n\n```c++\n109 97 21 4 89 40 62 39 98 72 9 35\n```\n\nCare este ultimul caracter nenul (diferit de `\\0`) al secretului?\n",
        "variante": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J"
        ],
        "raspuns": "B",
        "dificultate": "greu"
      },
      {
        "titlu": "Zăpăceală",
        "enunt_markdown": "\nBrăduț este un băiat zăpăcit care încurcă mereu drumul către școală.\nHarta cartierului său poate fi reprezentată ca un sistem ortogonal în care casa lui Brăduț se află în origine, iar școala acestuia se află în punctul de coordonate `(3, 4)`.\n\nDacă Brăduț se află în punctul de coordonate `(x, y)` acesta se poate deplasa într-un minut în unul din punctele `(x + 1, y)`, `(x - 1, y)`, `(x, y + 1)` și `(x, y - 1)`.\n\nPentru că este zăpăcit, acesta nu va considera mereu alegerea cea mai bună, ci va alege aleatoriu una dintre cele 4 direcții de deplasare, astfel:\n1. Va merge în `(x + 1, y)` cu probabilitatea `Pdreapta = 0.4`.\n2. Va merge în `(x - 1, y)` cu probabilitatea `Pstanga = 0.05`.\n3. Va merge în `(x, y + 1)` cu probabilitatea `Psus = 0.45`.\n4. Va merge în `(x, y - 1)` cu probabilitatea `Pjos = 0.1`.\n\nMai mult decât atât, lui Brăduț îi este permanent dor de casă. Astfel, după fiecare deplasare într-o anumită direcție, probabilitatea de deplasare în acea direcție scade cu `0.01`, iar probabilitatea de deplasare în direcția opusă crește cu `0.01`.\n\nCare este probabilitatea ca Brăduț să ajungă la școală (punctul `(3, 4)`) folosind un drum de durată minimă?\n\nConsiderăm una dintre variantele de răspuns corectă, dacă diferența dintre aceasta și valoarea reală a probabilității este mai mică decât `0.001`.\n",
        "variante": [
          0.002,
          0.015,
          0.023,
          0.043,
          0.074,
          0.087,
          0.092,
          0.131,
          0.176,
          0.5
        ],
        "raspuns": 0.074,
        "dificultate": "greu"
      },
      {
        "titlu": "2024 ca subșir",
        "enunt_markdown": "\nConsiderăm șirul **finit** `123456789101112131415...2024` format prin alipirea în ordine a tuturor cifrelor numerelor naturale nenule mai mici sau egale cu 2024. Pierre vrea să știe de câte ori apare `2024` ca subșir în acest șir. Ajutați-l pe Pierre.\n\n**Notă**: șirul `a` este un subșir al șirului `b` dacă `a` poate fi obținut din `b` ștergând 0 sau mai multe caractere din b.\n",
        "variante": [
          1421010813,
          4858581392,
          5144380298,
          5715978109,
          8173848695,
          6859173730,
          3268324869,
          1278909731,
          3429586865,
          5430179203
        ],
        "raspuns": 5715978109,
        "dificultate": "greu"
      },
      {
        "titlu": "Plimbare prin matrice",
        "enunt_markdown": "\nDupă ce a lucrat toată noaptea la propriul sistem de operare, Ioan a adormit buștean și a început să viseze.\n\nAcesta se pomenește în celula `(0, 0)` a unei matrice bidimensionale infinite. În această matrice, Ioan poate face doar un pas sau doi **jos sau la dreapta**. Cu alte cuvinte, daca el se află in celula `(i, j)`, într-o mutare poate ajunge in una dintre celulele `(i + 1, j)`, `(i + 2, j)`, `(i, j + 1)` sau `(i, j + 2)`.\n\nPentru a putea scăpa de vis, Ioan trebuie sa răspundă la următoarea întrebare: \\\n_În câte moduri poate ajunge în celula `(20, 24)`, având în vedere restricțiile de mișcare pe care le are?_\n",
        "variante": [
          "59713569536180432",
          "436844856458564300",
          "152596701737090864",
          "1119576038404099820",
          "384848943308945522",
          "20810114480126744",
          "52291395481992608",
          "1735342859526354688",
          "1343491246084919808",
          "27053148824164768"
        ],
        "raspuns": "1119576038404099820",
        "dificultate": "greu"
      }
    ],
    "pdf_etapa_1_link": "./pdfs/2024-etapa-I.pdf",
    "pdf_etapa_2_link": [
      "./pdfs/2024-rame-pane.pdf",
      "./pdfs/2024-racituri-cu-pireu.pdf",
      "./pdfs/2024-prajitura-cu-mujdei.pdf",
      "./pdfs/2024-cornisoni-afumati.pdf"
    ]
  },
  {
    "name": "Ediția 2023",
    "probleme": [
      {
        "titlu": "Numărul N",
        "enunt_markdown": "\nConsiderăm numărul `N = 1! + 2! + ... + 2023!`.\n\nCare este ultima cifră a numărului `N`?\n",
        "variante": [
          "0",
          "1",
          "3",
          "5",
          "8"
        ],
        "raspuns": "3",
        "dificultate": "usor"
      },
      {
        "titlu": "Numere puternice",
        "enunt_markdown": "\nUn număr este puternic dacă este strict mai mare decât răsturnatul său.\n\nDe exemplu, 10 și 21 sunt numere puternice, dar 1 și 34 nu sunt. Răsturnatul lui 10 este 1.\n\nCâte numere pozitive până în 2023 (inclusiv) sunt puternice?\n",
        "variante": [
          "519",
          "646",
          "766",
          "1258",
          "1378"
        ],
        "raspuns": "646",
        "dificultate": "usor"
      },
      {
        "titlu": "RedDrink",
        "enunt_markdown": "\nMatei se pregătește să învețe asiduu pentru examenul de Bacalaureat.\n\nPentru a avea mai multă energie, el și-a cumpărat 100 de doze de băutură energizantă RedDrink. Matei preferă această băutură și pentru promoția de care poate beneficia, respectiv dacă reciclează 7 doze de aluminiu goale de RedDrink primește una plină la schimb.\n\nEl și-a făcut un plan să bea 3 doze de RedDrink pe zi (dimineața, la prânz și seara), pentru a susține un efort mare de învățare. Dacă nu are 3 doze la dispoziție se mulțumește cu 2 doze, iar dacă nu are 2 doze la dispoziție se mulțumește cu una.\n\nDacă Matei reciclează toate dozele goale care pot fi convertite în doze gratuite RedDrink pline cu băutură, după câte zile Matei nu mai poate să bea nicio doză de RedDrink?\n",
        "variante": [
          "34",
          "37",
          "39",
          "41",
          "42"
        ],
        "raspuns": "39",
        "dificultate": "usor"
      },
      {
        "titlu": "Expresie",
        "enunt_markdown": "\nValoarea unei expresii de forma (a < b) este 1 dacă expresia este adevărată și 0 dacă ea este falsă. Care este valoarea expresiei E de mai jos?\n\n`$$E = (123^{345} < 654^{274}) \\\n      + 2 * (345^{322} < 654^{294}) \\\n      + 4 * (923^{263} < 452^{284})\n$$`\n",
        "variante": [
          "0",
          "2",
          "3",
          "5",
          "6"
        ],
        "raspuns": "3",
        "dificultate": "usor"
      },
      {
        "titlu": "Insule",
        "enunt_markdown": "\nÎntr-o matrice infinită (asemenea unui ocean nemărginit) în care pătratele albe reprezintă apă, iar pătratele negre reprezintă fâșii de pământ.\n\nMai multe fâșii formează o insulă dacă se poate ajunge din orice fâșie din insulă în orice altă fâșie din insulă mergând fie pe orizontală, fie pe verticală pe fâșii de pământ adiacente (fără a merge pe diagonale). O insulă poate fi formată și dintr-o singură fâșie de pământ. De pe o fâșie dintr-o insulă nu putem ajunge pe o altă fâșie de pe altă insulă. Dimensiunea unei insule reprezintă numărul de fâșii care alcătuiesc insula. În figura de mai jos sunt 4 astfel de insule cu dimensiunile 1, 4, 4 și 24.\n\nPresupunem că pentru fiecare fâșie de pământ cunoaștem dimensiunea insulei din care face parte. Dându-se o matrice infinită în care știm că se află 30 de fâșii de pământ și lista următoare sortată a dimensiunilor insulelor din care face parte fiecare fâșie de pământ:\n\n```\n1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4\n```\n\nsă se afle numărul de insule.\n",
        "imagine": "./images/2023-insule.png",
        "variante": [
          "5",
          "7",
          "11",
          "13",
          "15"
        ],
        "raspuns": "11",
        "dificultate": "usor"
      },
      {
        "titlu": "Reciclare",
        "enunt_markdown": "\nMatei vrea să recicleze. Are 6 obiecte pe care vrea să le arunce și pentru fiecare din ele știe câtă sticlă, cât plastic și câtă hârtie conține fiecare obiect. Din păcate, din motive tehnice, trebuie să arunce fiecare obiect la exact unul din cele 3 tomberoane de reciclare selectivă.\n\nCâte unități de materie primă poate recicla maxim, dacă aruncă obiectele în tomberoane în mod optim? \\\nMateria primă reciclată este sticla aruncată la tomberonul de sticlă, plasticul aruncat la tomberonul de plastic și hârtia aruncată la tomberonul de hârtie.\n\nCele 6 obiecte pe care le are Matei au:\n1. 4 unități de sticlă, 5 unități de plastic și 3 unități de hârtie.\n2. 10 unități de sticlă, 0 unități de plastic și 5 unități de hârtie.\n3. 3 unități de sticlă, 9 unități de plastic și 4 unități de hârtie.\n4. 5 unități de sticlă, 5 unități de plastic și 5 unități de hârtie.\n5. 1 unitățide sticlă, 2 unități de plastic și 3 unități de hârtie.\n6. 9 unități de sticlă, 9 unități de plastic și 8 unități de hârtie.\n",
        "variante": [
          "14",
          "32",
          "41",
          "74",
          "90"
        ],
        "raspuns": "41",
        "dificultate": "usor"
      },
      {
        "titlu": "Fort Leon",
        "enunt_markdown": "\nArhipelagul Fort Leon este format din 14 insule, majoritatea locuitorilor fiind programatori începători.\n\nÎntr-o zi cu soare, locuitorii arhipelagului s-au gândit că le-ar plăcea foarte mult să construiască mai multe poduri între insule astfel încât să poate pleca de pe orice insulă, să treacă o singură dată pe fiecare pod și să ajungă tot pe insula de unde au plecat. Pentru a-și îndeplini mai repede dorința, ei au scris un program care să-i ajute.\n\nDin păcate, ei au scris un program greșit, care le-a furnizat următoarea modalitate de construire a unor poduri între cele 14 insule (vedeți poza alăturată).\n\nDeoarece sunt foarte nerăbdători, locuitorii din Fort Leon vă roagă să-i ajutați, precizându-le numărul minim de poduri pe care trebuie să le adauge la cele deja indicate de programul scris de ei, astfel încăt să-și îndeplinească dorința.\n",
        "imagine": "./images/2023-graf.png",
        "variante": [
          "3",
          "4",
          "5",
          "6",
          "7",
          "8"
        ],
        "raspuns": "6",
        "dificultate": "usor"
      },
      {
        "titlu": "Oferte",
        "enunt_markdown": "\nMatei vrea să își cumpere pungi cu bomboanele lui favorite. Are la dispoziție 4 oferte, dintre care trebuie să aleagă **cel mult una**, pe care o poate folosi de cel mai multe ori.\n\nOfertele sunt următoarele:\n1. Prima ofertă: pentru fiecare 24 pungi cumpărate, următoarele 12 sunt gratuite.\n2. A doua ofertă: pentru fiecare 15 pungi cumpărate, următoarele 6 sunt gratuite.\n3. A treia ofertă: pentru fiecare 3 pungi cumpărate, următoarea este gratuită.\n4. A patra ofertă: pentru fiecare 40 pungi cumpărate, următoarele 20 sunt gratuite.\n\nPresupunând că o pungă de bomboane costă un leu, cât trebuie să plătească minim pentru a își cumpăra minim 100 pungi?\n",
        "variante": [
          "25",
          "72",
          "75",
          "80",
          "100"
        ],
        "raspuns": "72",
        "dificultate": "usor"
      },
      {
        "titlu": "Apă",
        "enunt_markdown": "\nMatei are multe bidoane de 5, 7 și 10 litri. Matei poate pune K litri de apă în bidoane dacă există un număr de bidoane de 5, 7 și 10 litri pe care le poate alege astfel încât suma capacităților bidoanelor alese să fie exact K. Concret, Matei poate pune K litri de apă în bidoane dacă există a, b și c astfel încât `$$5a + 7b + 10c = K$$`.\n\nCare este cel mai mare număr de litri de apă pe care nu îl poate pune în bidoane?\n",
        "variante": [
          "13",
          "17",
          "23",
          "26",
          "27"
        ],
        "raspuns": "23",
        "dificultate": "usor"
      },
      {
        "titlu": "Configurații",
        "enunt_markdown": "\nNetty este foarte preocupată de siguranța datelor din PC-urile aflate în firmă sa, așa că s-a gândit să interconecteze PC-urile pentru a realiza rapid și sigur backup-ul datelor. Deoarece nu știe exact cum trebuie să interconecteze PC-urile, Netty a apelat la un oracol apaș care i-a sugerat mai multe configurații magice. \n\nDeoarece oracolul apaș era foarte grăbit, acesta i-a spus, în fiecare configurație, doar numărul PC-urilor cu care trebuie interconectate fiecare PC din firmă. De exemplu, configurația `(2, 3, 1, 2)` înseamnă că un PC trebuie interconectat cu alte două PC-uri, alt PC trebuie interconectat cu 3 PC-uri etc.\n\nUnele dintre configurațiile respective sunt realizabile (de exemplu, configurația menționată anterior), iar altele nu (de exemplu, configurația `(3, 2, 3)`). Știind că oracolul i-a sugerat lui Netty următoarele configurațiile magice:\n\n```\nC1 = (5, 2, 6, 4, 3, 4, 2, 2, 1, 1),\nC2 = (5, 1, 1, 4, 4, 3, 5, 2, 2, 2),\nC3 = (6, 4, 4, 3, 9, 2, 2, 2, 1, 1),\nC4 = (6, 2, 6, 2, 6, 2, 6, 2, 8, 2),\nC5 = (7, 6, 7, 3, 3, 2, 2, 2, 4, 4),\n```\n\najută-o pe Netty, determinând numărul de configurații realizabile din cele 5 precizate!\n\n**Notă**: Pentru fiecare PC trebuie să existe exact câte conexiuni câte sunt specificate în configurație.\n",
        "variante": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5"
        ],
        "raspuns": "3",
        "dificultate": "usor"
      },
      {
        "titlu": "Algoritm",
        "enunt_markdown": "\nAlex, Dan și Matei sunt prieteni buni. Ei au participat împreună la un concurs de programare formând o echipă și au câștigat marele premiu, o consolă XBOX. Cum ei se înțeleg bine, se hotărăsc să împartă marele premiu, respectiv fiecare dintre ei se va juca pe rând o săptămână pe consolă. Cei trei prieteni trebuie să decidă acum ordinea în care se vor juca pe consolă. Alex propune să stabilească această ordine folosind următorul algoritm care amestecă cele trei elemente din vectorul v situate pe pozițiile 0, 1 și 2:\n\n```\nv = [Alex, Dan, Matei]\npentru i de la 0 la 2\n        swap(v[i], v[random(3)])\n```\n\nunde `swap(a,b)` interschimbă valorile elementelor a și b, iar `random(3)` returnează un număr aleator 0, 1 sau 2 cu probabilitatea uniformă 1/3.\n\nCare este șansa ca Matei să fie generat pe prima poziție (poziția 0) a vectorului v folosind algoritmul de mai sus?\n",
        "variante": [
          "1/2",
          "1/3",
          "1/4",
          "8/27",
          "3/10"
        ],
        "raspuns": "8/27",
        "dificultate": "mediu"
      },
      {
        "titlu": "Șiruri de caractere",
        "enunt_markdown": "\nConsiderăm șirurile de caractere de lungime 10 care conțin literele a si b, dar fără a conține trei apariții consecutive ale literelor a sau b.\n\nSpre exemplu, șirul `ababababab` este un exemplu pozitiv (verifică regulile), iar șirul `aaabababab` este un exemplu negativ (nu verifică regulile).\n\nCâte exemple pozitive de astfel de șiruri de caractere există?\n",
        "variante": [
          "68",
          "110",
          "175",
          "178",
          "288"
        ],
        "raspuns": "178",
        "dificultate": "mediu"
      },
      {
        "titlu": "Probabilitate",
        "enunt_markdown": "\nCare este, în medie, probabilitatea ca funcția de mai jos să returneze `true`?\nFunctia `rnd()` returnează un număr aleator real uniform distribuit între 0 și 1.\n\nAtenție: funcția `rnd()` nu este aceeași cu funcția `rand()` din C/C++.\n\n```\nbool F() {\n    if (rnd() < 0.5)\n        return true;\n    if (rnd() < 0.4)\n        return false;\n    return rnd() < 0.3;\n}\n```\n",
        "variante": [
          "0.5",
          "0.56",
          "0.59",
          "0.9",
          "0.94"
        ],
        "raspuns": "0.59",
        "dificultate": "mediu"
      },
      {
        "titlu": "Funcții",
        "enunt_markdown": "\nSe dau următoarele 3 funcții:\n\n```\nint A(int x) {\n    if (x <= 1)\n        return x;\n    return A(x - 1) + A(x - 2);\n}\n\nint B(int x) {\n    if (x <= 1)\n        return 1;\n    return B(x / 2) + B(x / 2);\n}\n\nint C(int x) {\n    if (x < 0)\n        return 0;\n    return 1 + C(x - 10);\n}\n```\n\nSe presupune ca tipul de date int folosit nu dă overflow și poate salva valori oricât de mari.\n\nConsiderând numerele:\n```\na = A(123456789)\nb = B(123456789)\nc = C(123456789)\n```\n\nCare dintre următoarele inegalități este adevărată?\n",
        "variante": [
          "a < b < c",
          "c < b < a",
          "b < a < c",
          "c < a < b",
          "a < c < b"
        ],
        "raspuns": "c < b < a",
        "dificultate": "mediu"
      },
      {
        "titlu": "Puncte șa",
        "enunt_markdown": "\nÎntr-o matrice M de dimensiune m×n se numește punct șa un element `M[i][j]` cu proprietatea că fie este minim pe linia i și maxim pe coloana j, fie este maxim pe linia i și minim pe coloana j.\n\nDacă elementele matricei M sunt o permutare a mulțimii `{1,2,...,m⋅n}`, unde m ≥ 3 și n ≥ 3, atunci numărul maxim de puncte șa pe care poate să le aibă matricea M este:\n",
        "variante": [
          "minimul dintre m și n",
          "maximul dintre m și n",
          "0",
          "1",
          "2"
        ],
        "raspuns": "2",
        "dificultate": "mediu"
      },
      {
        "titlu": "Furnicuța",
        "enunt_markdown": "\nO furnicuță se deplasează pe o frunză, reprezentată printr-o matrice triunghiulară de dimensiune 2023, cu liniile și coloanele numerotate de la 1 (matricea are deci 2023 linii, iar fiecare linie i din matrice are i coloane).\n\nEa ar vrea să calculeze în câte moduri poate ajunge din vârful frunzei, adică din celula `(1,1)`, la baza frunzei, adică pe ultima linie a matricei (în oricare dintre celulele acesteia), știind că pentru că este așa de mică se poate deplasa dintr-o celulă a matricei doar un pas în jos sau un pas în dreapta-jos (din celula `(i,j)` în `(i+1,j)` sau `(i+1, j+1)`).\n\nPână să găsească ea o strategie de numărare, o omidă a venit și a mușcat dintr-o margine a frunzei celulele `(x,1)` unde x este multiplu de 100. Mai mult, omida pofticioasă a mușcat și celula `(2001, 1999)`.\n\nFurnicuța nu mai știe acum să calculeze câte trasee poate face fără a trece prin celulele mușcate, așa ca va roagă pe voi să calculați care este cea mai mare putere a lui 2 care divide numărul acestor trasee.\n",
        "variante": [
          "22",
          "25",
          "2021",
          "23",
          "0"
        ],
        "raspuns": "25",
        "dificultate": "mediu"
      },
      {
        "titlu": "Joc",
        "enunt_markdown": "\nX și Y joacă următorul joc:\\\nSe pornește cu numărul `p = 1`, și, pe rând. X și Y (începând cu X) multiplică numărul p cu un număr între 2 și 9.\n\nCâștigă primul care ajunge cu `p >= n` unde n este număr dat.\n\nDacă X și Y joacă 9 jocuri în care n este fixat pe rând la valorile:\n```\n37, 89, 167, 2920, 5832, 66666, 104970, 131313, 34012226\n```\n\nDe câte ori câștigă X?\n",
        "variante": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9"
        ],
        "raspuns": "4",
        "dificultate": "greu"
      },
      {
        "titlu": "Tastatură",
        "enunt_markdown": "\nMatei tocmai a cumpărat tastatura din imagine și dorește să apese în total pe 10 taste. Prima tastă pe care apasă poate fi oricare dintre ele, dar fiind foarte leneș vrea ca începând de la a doua apăsare, fiecare tastă pe care o apasă să fie alăturată celei pe care tocmai a apăsat-o (tasta a i-a pe care apasă să fie alăturată tastei a i-1-a pentru 2 ≤ i ≤ 10).\n\nDouă taste sunt alăturate dacă sunt diferite și se ating pe o latură sau jumătate de latură. De exemplu, tastele \"1\" si \"0\" sunt alăturate, dar tastele \"7\" si \"5\", sau \"+\" si \"*\" nu sunt.\n\nÎn câte moduri poate apăsa Matei pe taste?\n",
        "imagine": "./images/2023-tastatura.png",
        "variante": [
          "1212334",
          "4200301",
          "2204913",
          "1150905",
          "1200908",
          "3433058",
          "9507809",
          "7756489",
          "8890506",
          "6632980"
        ],
        "raspuns": "1200908",
        "dificultate": "greu"
      },
      {
        "titlu": "Funcție recursivă",
        "enunt_markdown": "\nConsiderăm următoarea funcție recursivă:\n\n```\nvoid f(int n, unsigned long long int k, unsigned long long int t)\n{\n    if(n >= 0)\n    {\n        if(k <= t)\n        {\n            cout << k << \" \";\n            f(n, k+1, t);\n        }\n        else\n            f(n-1, 1, 2*t);\n    }\n}\n```\n\nCu cât este egală suma tuturor numerelor care vor fi afișate pe ecran după executarea apelului `f(30,1,1)`?\n",
        "variante": [
          "2^31-1",
          "2^31+1",
          "2^32-1",
          "2^32+1",
          "2^29⋅(2^30+1)",
          "2^30⋅(2^31+1)",
          "(2^62+3⋅2^31-4)/3",
          "(2^62+3⋅2^31-3)/2",
          "(2^61+3⋅2^30-3)/3",
          "(2^61+3⋅2^30-2)/3"
        ],
        "raspuns": "(2^61+3⋅2^30-2)/3",
        "dificultate": "greu"
      },
      {
        "titlu": "Multipli de 2023",
        "enunt_markdown": "\nCâte numere de forma `11...100...0` (cu m de 1 și n de 0, pentru `n, m ≥ 1`) cu proprietatea că `m + n ≤ 15000` sunt multipli de 2023?\n",
        "variante": [
          "82361",
          "337365",
          "141361",
          "225563",
          "130464",
          "246577",
          "331547",
          "459011",
          "178023",
          "267908"
        ],
        "raspuns": "130464",
        "dificultate": "greu"
      }
    ],
    "pdf_etapa_1_link": "./pdfs/2023-etapa-I.pdf",
    "pdf_etapa_2_link": [
      "./pdfs/2023-ForkBomb.pdf",
      "./pdfs/2023-Cadouri.pdf",
      "./pdfs/2023-Agar.pdf",
      "./pdfs/2023-BebelusiPlangaciosi.pdf"
    ]
  },
  {
    "name": "Ediția 2022 Bis",
    "probleme": [
      {
        "titlu": "Cafea",
        "enunt_markdown": "\nMatei are 5 cafele. Fiecare cafea are un volum (dat în ml) și o concentrație dată în procente. Matei poate amesteca două cafele. Dacă amestecă o cafea cu `$$v_1$$` ml și concentrație `$$c_1$$` cu una cu `$$v_2$$` ml și concentrație `$$c_2$$` atunci el va obține o cafea cu:\n\n- volum `$$v_1 + v_2$$`\n- concentrație `$$\\frac{c_1 \\cdot v_1 + c_2 \\cdot v_2}{v_1 + v_2}$$`\n\nSatisfacția adusă lui Matei de o cafea cu volum `$$v$$` și concentrație `$$c$$` este `$$v \\cdot c$$`.\n\nȘtiind că Matei are:\n\n * o cafea de 50 ml și concentrație de 40% (`c = 0.4`)\n * o cafea de 100 ml și concentrație de 30% (`c = 0.3`)\n * o cafea de 300 ml și concentrație de 10% (`c = 0.1`)\n * o cafea de 250 ml și concentrație de 10% (`c = 0.1`)\n * o cafea de 500 ml și concentrație de 50% (`c = 0.5`)\n\nCare este cea mai mare satisfacție pe care o poate obține Matei amestecând optim cafelele?\n",
        "variante": [
          "10",
          "355",
          "250",
          "40",
          "450"
        ],
        "raspuns": "355",
        "dificultate": "usor"
      },
      {
        "titlu": "Furnicuța",
        "enunt_markdown": "\nSe consideră o suprafață (matrice) infinită în jos și în dreapta cu liniile numerotate de sus în jos și coloanele de la stânga la dreapta. O furnică explorează această suprafață pornind din colțul stânga sus `(1,1)`. Deoarece furnica este prudentă și vrea să rămână mereu aproape de zona explorată deja (și marcată cu feromoni), explorarea se face extinzând succesiv pătratul deja parcurs din colțul stânga sus.\n\nAstfel, la început furnica coboară în celula `(2,1)`, apoi merge în dreapta în celula `(2,2)` și apoi urcă în celula `(1,2)`, completând un pătrat `$$2 \\times 2$$`. Pe acesta îl extinde mergând în dreapta în celula `(1,3)`, apoi coboară în `(2,3)` și `(3,3)`, după care se deplasează spre stânga în celulele `(3,2)` și `(3,1)` completând un pătrat `$$3 \\times 3$$`.\n\nPe acesta îl extinde coborând în `(4,1)`, mergând în dreapta până în `(4,4)` și apoi urcând în `(1,4)`. Continuând în acest fel furnica poate explora o suprafață oricât de mare. Mai jos se pot vedea pașii la care a fost vizitată fiecare celulă până când furnica explorează un pătrat `$$5 \\times 5$$`.\n\n| 1  | 4  | 5  | 16 | 17 |\n|----|----|----|----|----|\n| 2  | 3  | 6  | 15 | 18 |\n| 9  | 8  | 7  | 14 | 19 |\n| 10 | 11 | 12 | 13 | 20 |\n| 25 | 24 | 23 | 22 | 21 |\n\nPe ce linie și pe ce coloană se va afla furnica la pasul `100001`?\n",
        "variante": [
          "(144,316)",
          "(145,316)",
          "(145,317)",
          "(316, 145)",
          "(317,145)"
        ],
        "raspuns": "(145,317)",
        "dificultate": "usor"
      },
      {
        "titlu": "Parolă",
        "enunt_markdown": "\nMatei are un PC nou, care rulează PearOS. Alex a reușit să îi fure calculatorul și acum încearcă să îi schimbe parola.\n\nAlex știe că Matei are o parolă de lungime 10 caractere formată din litere mici ale alfabetului englez. De asemenea, pentru o experiență mai plăcută a utilizatorului, atunci când o parolă greșită este introdusă, PearOS notifică utilizatorul dacă parola adevărată este mai mică sau mai mare lexicografic decât cea introdusă.\n\nDacă Alex caută parola în mod optim, atunci numărul de încercări pe care le va efectua este:\n",
        "variante": [
          "cuprins între 0 și 30",
          "cuprins între 31 și 60",
          "cuprins între 61 și 90",
          "cuprins între 91 și 120",
          "mai mare sau egal cu 121"
        ],
        "raspuns": "cuprins între 31 și 60",
        "dificultate": "usor"
      },
      {
        "titlu": "Servere",
        "enunt_markdown": "\nAlex a încercat să organizeze un concurs online, dar cu câteva minute înainte de începerea sa, și-a dat seama că platforma nu este suficient de puternică pentru a găzdui toți candidații și riscă să pică în timpul probei.\n\nLa concurs participă `1000` de candidați și Alex dorește să închirieze câteva servere.\nUn server este caracterizat de prețul său (cât îl costă pe Alex să închirieze serverul pe durata probei) și capacitatea sa (numărul de concurenți pe care serverul îi poate servi).\n\nAlex are de ales între următoarele opțiuni de servere:\n\n- servere cu prețul `2` și capacitate `2`;\n- servere cu prețul `5` și capacitate `10`;\n- servere cu prețul `10` și capacitate `23`.\n\nDe notat că Alex poate închiria oricate servere, indiferent dacă sunt sau nu de același tip.\n\nCare este costul minim cu care Alex poate închiria servere cu suma capacităților mai mare sau egală cu `1000`?\n",
        "variante": [
          "500",
          "433",
          "440",
          "439",
          "437"
        ],
        "raspuns": "437",
        "dificultate": "usor"
      },
      {
        "titlu": "Permutare",
        "enunt_markdown": "\nMatei are următoarea permutare:\n```\n9, 1, 2, 6, 5, 4, 3, 7, 10, 8\n```\n\nEl are voie să efectueze cel mult `5` operații de interschimbare a două elemente alăturate. Care este cea mai mică permutare în ordine lexicografică pe care o poate obține?\n",
        "variante": [
          "1, 2, 5, 6, 9, 4, 3, 7, 10, 8",
          "1, 2, 4, 6, 9, 5, 3, 7, 10, 8",
          "1, 2, 6, 5, 4, 9, 3, 7, 10, 8",
          "1, 2, 4, 9, 6, 5, 3, 7, 10, 8",
          "1, 2, 4, 9, 5, 6, 3, 7, 10, 8"
        ],
        "raspuns": "1, 2, 4, 9, 6, 5, 3, 7, 10, 8",
        "dificultate": "usor"
      },
      {
        "titlu": "Foc",
        "enunt_markdown": "\nÎn timpul taberei la munte, Alex are de aprins un foc.\nEl are la dispoziție o grămadă de lemne de diferite mărimi, identificate prin numere de la 1 la 100. Unicul băț de dimensiune 1 este un chibrit, cu care Alex are de aprins focul.\nDeși buturuga mică răstoarnă carul mare, nu poate ca un chibrit să aprindă un buștean. De fapt, o bucată de lemn de dimensiune `d` care ia foc la momentul `t` aprinde la momentul `t+1` toate bucățile neaprinse de dimensiune mai mică sau egală cu `2*d`.\n\nȘtiind că grămada de lemne conține bucăți cu dimensiunile:\n```\n1, 2, 2, 2, 3, 5, 5, 5, 7, 13, 14, 15, 15, 25, 35, 50, 50, 51, 78, 99, 100\n```\n\nȘi că Alex dă foc chibritului în momentul `t=1`, care este primul moment de timp când toate lemnele sunt aprinse?\n",
        "variante": [
          "6",
          "7",
          "8",
          "9",
          "10"
        ],
        "raspuns": "9",
        "dificultate": "usor"
      },
      {
        "titlu": "Plantă",
        "enunt_markdown": "\nMatei și-a cumpărat o plantă nouă, pe care trebuie să o ude zilnic, cu exact un litru de apă.\n\nEl are patru sticle, inițial goale, cu volumele de 2, 8, 10 și 20 litri.\n\nÎntr-o operație, Matei poate să:\n\n- ia o sticlă, pe care o umple complet de la robinet;\n- ia două sticle și varsă cât de mult poate din prima în a doua (fie până când prima sticlă se golește, fie până când a doua sticlă se umple);\n- ude planta, dacă are o sticlă umplută cu exact 1 litru.\n\nConsiderăm afirmațiile următoare:\n\n1. Matei poate uda planta în 6 mutări.\n2. Matei poate uda planta folosind numai 3 sticle.\n3. Matei poate uda planta fără să folosească mai mult de 22 de litri de apă.\n4. Matei nu poate uda planta.\n\nCare din afirmații este adevărată?\n",
        "variante": [
          "afirmațiile 1, 2 și 3",
          "afirmațiile 1 și 2",
          "afirmația 4",
          "afirmațiile 2 și 3",
          "afirmațiile 1, 2 și 4"
        ],
        "raspuns": "afirmația 4",
        "dificultate": "usor"
      },
      {
        "titlu": "Matrice pătratică",
        "enunt_markdown": "\nConsiderăm o matrice pătratică A de dimensiune `n = 1000`, având liniile și coloanele indexate de la 1.\n\nOrice element `A[i][j]` al matricei este egal cu `((i+j) **mod** n) + 1`.\n\nDacă `sumlin(i)` reprezintă suma tuturor elementelor aflate pe linia _i_ și `sumcol(j)` reprezintă suma tuturor elementelor aflate pe coloana _j_, atunci valoarea maximă a expresiei:\n\n```katex\n|sumlin(i)-sumcol(j)|\n```\n\nUnde `$$i, j \\in \\{1,2, \\ldots,n\\}$$`, este egală cu:\n",
        "variante": [
          "0",
          "500",
          "1000",
          "1998",
          "500500"
        ],
        "raspuns": "0",
        "dificultate": "usor"
      },
      {
        "titlu": "Șir infinit",
        "enunt_markdown": "\nConsiderăm șirul infinit:\n```\n1234567891011121314151617181920 ...\n```\n\nObținut prin alipirea tuturor cifrelor tuturor numerelor naturale nenule.\n\nConsiderând șirul respectiv ca fiind indexat de la 0, atunci cifra aflată pe poziția `21052022` este egală cu:\n",
        "variante": [
          "1",
          "2",
          "3",
          "6",
          "9"
        ],
        "raspuns": "1",
        "dificultate": "usor"
      },
      {
        "titlu": "Palindromuri",
        "enunt_markdown": "\nUli a descoperit palindromurile și este foarte pasionată de ele, așa că dorește să calculeze câte palindromuri sunt mai mici ca 2022.\n\nTotuși, după o experiență traumatizantă la ora de fizică, Uli nu mai suportă cifra `4`, așa că dorește să calculeze toate palindromurile între `0` (inclusiv) și `2022` care nu conțin cifra `4`.\n\nCâte astfel de palindromuri sunt?\n",
        "variante": [
          "99",
          "100",
          "101",
          "102",
          "103"
        ],
        "raspuns": "99",
        "dificultate": "usor"
      },
      {
        "titlu": "Divizori",
        "enunt_markdown": "\nCâte numere între `1` și `2.000.000.000` (inclusiv) au exact `5` divizori?\n",
        "variante": [
          "0",
          "12",
          "34",
          "47",
          "156"
        ],
        "raspuns": "47",
        "dificultate": "mediu"
      },
      {
        "titlu": "Matrice",
        "enunt_markdown": "\nCare este suma maximă a elementelor matricei de mai jos, după înmulțirea unor linii și/sau coloane (posibil chiar toate) cu $-1$? Înmulțirea unei linii sau coloane cu $-1$ presupune înmulțirea tuturor elementelor sale cu $-1$.\n\n|  4  | -1 |  6  | 4  | -5 |\n|-----|----|-----|----|----|\n| -2  |-33 | -12 | 10 | -11|\n|  1  | 0  | 3   |-1  | 4  |\n|-99  | -98|-40  |34  | 33 |\n",
        "variante": [
          "233",
          "234",
          "235",
          "361",
          "427"
        ],
        "raspuns": "361",
        "dificultate": "mediu"
      },
      {
        "titlu": "Monede",
        "enunt_markdown": "\nToată lumea are acasă o cutie cu monede de 10 și 50 bani cu care nu are ce să facă.\nAlex a decis să schimbe acest lucru. Începând de acum, el s-a hotărât să plătească orice sumă cât mai exact poate.\n\nConcret, dacă are de plătit la magazin, va încerca:\n\n- să dea cât mai multe monede de 50 de bani poate, fără să depășească suma totală;\n- după ce nu mai poate da monede de 50 de bani, încearcă să dea cât mai multe de 10 bani, de asemenea fără a depăși suma totală;\n- după aceea plătește suma rămasă cu bancnote de 1 leu.\n\nDe notat că mereu casierul dă restul exact, cu numărul minim de monede necesar.\nÎnțial, Alex are:\n\n- 10 monede de 50 de bani\n- 10 monede de 10 bani.\n\nCu ce monede va rămâne Alex, dacă are de plătit, în ordine, sumele `4.7, 2.3, 10.1, 3.5`?\n",
        "variante": [
          "o monedă de 50 de bani și o monedă de 10 bani",
          "două monede de 50 de bani",
          "nicio monedă",
          "4 monede de 10 bani",
          "o monedă de 50 de bani"
        ],
        "raspuns": "4 monede de 10 bani",
        "dificultate": "mediu"
      },
      {
        "titlu": "Acțiuni",
        "enunt_markdown": "\nAlex se uită la prețul acțiunilor sale pe piață.\n\nÎn mod inexplicabil, prețul acțiunilor la minutul i este:\n\n```katex\n(i^3 + 7 \\cdot i^2 + 3 \\cdot i + 84) \\textbf{ mod } 100\n```\n\nAvând prețul acțiunilor pentru minutul 1, 2, ..., 100, Alex își pune următoarea întrebare: dacă ar putea, pe parcursul acestor 100 de minute, să cumpere o acțiune și să o vândă mai târziu, care este profitul maxim pe care ar putea să îl obțină?\n",
        "variante": [
          "0",
          "34",
          "55",
          "73",
          "96"
        ],
        "raspuns": "96",
        "dificultate": "mediu"
      },
      {
        "titlu": "Numere speciale",
        "enunt_markdown": "\nFie numerele \"speciale\":\n\n```katex\n100, 356, 440, 1137, 1901\n```\n\nDefinim puterea unui număr întreg x ca fiind distanța față de cel mai apropiat număr special, respectiv valoarea minimă a modulului `|x - s|`, unde `s` este unul dintre numerele speciale.\n\nCâte numere cuprinse între `1` și `2022` (inclusiv) au puterea un număr prim?\n",
        "variante": [
          "141",
          "2008",
          "446",
          "431",
          "1577"
        ],
        "raspuns": "431",
        "dificultate": "mediu"
      },
      {
        "titlu": "Fotoliu",
        "enunt_markdown": "\nBunica lui Matei are un fotoliu. Fotoliul este foarte vechi și din tapițerie au început să iasă arce.\n\nPutem privi fotoliul ca o matrice pătratică de 100 pe 100, având cele 4 colțuri la coordonatele `(0, 0)`, `(0, 100)`, `(100, 0)` și `(100, 100)`. Matei a observat 5 arce, fiecare reprezentat prin cele două coordonate `(X_i, Y_i)`, care indică pe unde acesta străpunge fotoliul.\n\nEvident, Matei nu vrea să se așeze pe un arc, deci se întreabă care este aria celui mai mare pătrat inclus în tapițerie, cu laturile paralele cu axele de coordonate și în interiorul căruia să nu se afle niciun arc. De observat faptul că arcele au voie să se afle pe laturile și colțurile pătratului.\n\nArcele sunt caracterizate prin următoarele coordonate:\n\n```\n(48, 47), (64, 27), (54, 28), (80, 83), (92, 36)\n```\n\nCare este latura maximă a unui pătrat complet inclus în tapițerie, cu laturile paralele cu axele de coordonate, în interiorul căruia nu se află niciun arc?\n",
        "variante": [
          "23",
          "33",
          "43",
          "53",
          "63"
        ],
        "raspuns": "53",
        "dificultate": "mediu"
      },
      {
        "titlu": "Întrebări",
        "enunt_markdown": "\nAlex întâlnește doi oameni.\nPe unul dintre cei doi îl cheamă Matei. Alex știe acest lucru, dar nu știe pe care dintre ei îl cheamă Matei.\nDe asemenea, unul dintre cei doi spune mereu adevărul și celălalt minte mereu. Alex știe și el lucrul acesta, dar, din nou, nu știe cine minte și cine spune adevărul.\n\nAlex are în minte 5 întrebări pe care vrea să le folosească pentru a afla dacă Matei minte sau nu:\n\n1. Matei minte?\n2. Ești Matei?\n3. Ce ar spune celălalt dacă l-ași întreba dacă Matei minte?\n4. Ce ai spune dacă te-aș întreba dacă Matei minte?\n5. Este adevărat că `1+1=2`?\n\nAlex dorește să pună exact o întrebare dintre cele 5 pentru a-l identifica pe Matei. Pe care dintre cele 5 întrebări le poate folosi?\n",
        "variante": [
          "întrebarea 1",
          "întrebările 1 și 5",
          "întrebarea 2",
          "întrebările 1 și 4",
          "întrebările 2, 3 și 4"
        ],
        "raspuns": "întrebările 2, 3 și 4",
        "dificultate": "greu"
      },
      {
        "titlu": "Funcție",
        "enunt_markdown": "\nCare va fi output-ul următoarei secvențe de cod la apelul funcției `g()`?\n\n```C++\nlong long f(long long a, long long b)\n{\n    if (a == 0)\n        return 0;\n    else if (a & 1)\n        return (b + f(a ^ 1, b)) % 137;\n    else\n        return f(a >> 1, b << 1);\n}\n\nvoid g()\n{\n    long long suma = 0;\n    for (long long i = 0; i < 2LL * 1000LL * 1000LL * 1000LL; i++) {\n        suma += f(i, i);\n        suma %= 137;\n    }\n\n    cout << \"Suma este \" << suma << '\\n';\n}\n```\n",
        "variante": [
          "Suma este 0",
          "Suma este 1",
          "Suma este 4",
          "Suma este 8",
          "Suma este 16",
          "Suma este 32",
          "Suma este 64",
          "Suma este 128",
          "Suma este 256",
          "Suma este 512"
        ],
        "raspuns": "Suma este 4",
        "dificultate": "greu"
      },
      {
        "titlu": "Turnulețe",
        "enunt_markdown": "\nEma are 22 de cuburi astfel: 7 verzi, 8 albastre și 7 roșii.\n\nEa ar vrea să vadă câte turnulețe poate forma cu ele fără ca un cub verde să fie plasat imediat peste un cub roșu.\n\nÎn câte moduri diferite poate construi turnulețe de acest tip folosind toate cuburile? Două moduri sunt diferite dacă șirurile de culori ce încep de la primul cub de jos sunt diferite.\n",
        "variante": [
          "23519245",
          "1097450640",
          "41409225",
          "37268302",
          "10803075",
          "194276877",
          "298507535",
          "107567859",
          "251890065",
          "462058202"
        ],
        "raspuns": "41409225",
        "dificultate": "greu"
      },
      {
        "titlu": "Sosii",
        "enunt_markdown": "\nDoi oameni se numesc _sosii_ dacă seamănă mult unul cu altul.\nEvident, relația de _a fi sosie_ este una de echivalență deoarece:\n\n- `A` este mereu sosie cu `A`;\n- dacă `A` este sosie cu `B`, atunci și `B` este sosie cu `A`;\n- dacă `A` este sosie cu `B` și `B` cu `C`, atunci și `A` este sosie cu `C`.\n\nNumim o pereche `(A, B)` _minunată_ dacă îndeplinește simultan următoarele două condiții:\n\n- `A < B`\n- `A` și `B` sunt sosii.\n\nÎntr-un grup de `N` oameni numerotați de la `1` la `N`, Matei a observat că sunt exact `2022` de perechi minunate.\n\nCare este cea mai mică valoare a numărului `N` pentru care pot exista exact `2022` de perechi minunate?\n",
        "variante": [
          "65",
          "66",
          "67",
          "68",
          "69",
          "70",
          "71",
          "72",
          "73",
          "74"
        ],
        "raspuns": "68",
        "dificultate": "greu"
      }
    ],
    "pdf_etapa_1_link": "./pdfs/2022-etapa-I-B.pdf",
    "pdf_etapa_2_link": []
  },
  {
    "name": "Ediția 2022",
    "probleme": [
      {
        "titlu": "Exponent",
        "enunt_markdown": "\nCare este cel mai mare exponent `k` astfel încât `$$12^k$$` divide numărul `$$100!$$` ?\n",
        "variante": [
          "8",
          "25",
          "33",
          "48",
          "97"
        ],
        "raspuns": "48",
        "dificultate": "usor"
      },
      {
        "titlu": "Matrice pătratică",
        "enunt_markdown": "\nConsiderăm o matrice pătratică A de dimensiune `$$10 \\times 10$$`, având liniile și coloanele indexate de la 1.\n\nOrice element `A[i][j]` al matricei este egal cu minimul dintre i și j (`$$1 \\leq i,j \\leq 10$$`).\n\nSuma tuturor elementelor din matricea A este egală cu:\n",
        "variante": [
          "285",
          "385",
          "500",
          "550",
          "715"
        ],
        "raspuns": "385",
        "dificultate": "usor"
      },
      {
        "titlu": "Funcție",
        "enunt_markdown": "\nPentru numărul natural pozitiv `n` definim `f(n)` astfel:\n\n- `f(1) = 1`\n- `f(n) = 1 + f(n/2)`, dacă n este par\n- `1 + f(3n+1)`, dacă n este impar și diferit de 1.\n\nSpre exemplu:\n```\nf(10) = 1 + f(5) = 1 + 1 + f(16) = 1 + 1 + 1 + f(8) = ... = 7\n```\n\nCu cât este egal `f(2022)`?\n",
        "variante": [
          "64",
          "128",
          "256",
          "512",
          "1024"
        ],
        "raspuns": "64",
        "dificultate": "usor"
      },
      {
        "titlu": "Pagini",
        "enunt_markdown": "\nNumerele de la `1` la `20.000` sunt scrise în ordine într-o carte cu `100` de foi (`200` de pagini), câte `100` pe pagină.\n\nMai exact, prima foaie, alcătuită din paginile `1` și `2`, conține pe prima pagină numerele de la `1` la `100` și pe a doua pagină numerele de la `101` la `200`. A doua foaie, compusă din paginile `3` și `4` conține numerele de la `201` la `400` etc.\n\nCineva dezleagă cartea, amestecă foile și o leagă la loc. Atenție, foile nu sunt rotite sau întoarse ci doar permutate.\n\nCare este probabilitatea, ca numerele de la `1150` la `1250` să fie în continuare consecutive?\n",
        "variante": [
          "1",
          "1/2",
          "1/99",
          "1/100",
          "99/10100"
        ],
        "raspuns": "1/100",
        "dificultate": "usor"
      },
      {
        "titlu": "Submulțime de produs maxim",
        "enunt_markdown": "\nFie mulțimea de numere reale următoare:\n```\nA = {\n  -3000, 3000,\n  -2000, 2000,\n  -1000, 1000,\n  -13, 13, -7,\n  7, -5, 5, -1.5,\n  1.5, -0.75, 0.75,\n  -0.5, 0.5, 0\n}\n```\n\nCare este numărul de elemente al submulțimii de produs maxim din A?\n",
        "variante": [
          "9",
          "13",
          "14",
          "15",
          "18"
        ],
        "raspuns": "15",
        "dificultate": "usor"
      },
      {
        "titlu": "Țara fermecată",
        "enunt_markdown": "\nÎn țara fermecată, există `100` orașe, identificate cu numerele de la `0` la `99` și următoarele drumuri bidirecționale:\n\n- Autostrăzi între orașele `(0 și 9)`, `(10 și 19)`, `(20 și 29)`, ..., `(90 și 99)`, a căror traversare durează `4` ore;\n- Drumuri comunale între orașele `(0 și 1)`, `(1 și 2)`, ..., `(98 și 99)`, a căror traversare durează o oră.\n\nCât durează cel mai rapid traseu de la orașul `12` la orașul `72`?\n",
        "variante": [
          "29",
          "30",
          "34",
          "35",
          "38"
        ],
        "raspuns": "34",
        "dificultate": "usor"
      },
      {
        "titlu": "Matrice binară",
        "enunt_markdown": "\nFie o matrice pătratică de dimensiune `2022` ce conține valori de `1` și `0`, astfel încât există exact o valoare egală cu `1` pe fiecare linie și pe fiecare coloană.\n\nÎn matrice este permisă interschimbarea a două valori din celule vecine pe verticală sau pe orizontală (considerăm că două celule sunt vecine dacă au o latură comună).\n\nConsiderând toate matricele cu o asemenea proprietate, care este numărul minim de interschimbări necesare pentru a aduce toate valorile de `1` pe aceeași linie sau pe aceeași coloană?\n",
        "variante": [
          "2022",
          "511566",
          "510555",
          "1021110",
          "1022121"
        ],
        "raspuns": "1022121",
        "dificultate": "usor"
      },
      {
        "titlu": "Ultima cifră",
        "enunt_markdown": "\nUltima cifră a numărului urmator este:\n```katex\n1^1 + 2^2 + 3^3 + \\ldots + 2022^{2022}\n```\n",
        "variante": [
          "0",
          "1",
          "3",
          "5",
          "9"
        ],
        "raspuns": "5",
        "dificultate": "usor"
      },
      {
        "titlu": "Numere Fibonacci",
        "enunt_markdown": "\nCâte numere Fibonacci sunt în intervalul închis `[1234567890, 9876543210]`?\n",
        "variante": [
          "1",
          "2",
          "4",
          "8",
          "16"
        ],
        "raspuns": "4",
        "dificultate": "usor"
      },
      {
        "titlu": "Cicluri de lungime 3",
        "enunt_markdown": "\nFie graful neorientat `G` dat prin mulțimea nodurilor:\n```\nV = { 1, 2, …, 1000 }\n```\nȘi mulțimea muchiilor:\n```\nE = { (i, j) | i + j este număr prim, și 1 ≤ i, j ≤ 1000}\n```\n\nCare este numărul ciclurilor distincte de lungime 3 din graful G?\n(Considerăm ca doua cicluri sunt distincte daca ele diferă prin cel putin o muchie.)\n",
        "variante": [
          "0",
          "1",
          "27",
          "64",
          "125"
        ],
        "raspuns": "0",
        "dificultate": "usor"
      },
      {
        "titlu": "Netville",
        "enunt_markdown": "\nÎn orașul Netville sunt `14052022` de case, identificate prin numerele naturale `1, 2,..., 14052022`.\n\nÎn majoritatea caselor locuiesc studenți (sau viitori studenți) ai Facultății de Matematică și Informatică, care s-au gândit să creeze o rețea de calculatoare folosind următoarea regulă:\n\nCasa cu numărul `h` (`$$2 \\leq h \\leq 14052022$$`) va fi interconectată cu toate casele al căror număr `d` este un divizor al lui `h` (`$$1 \\leq d < h$$`).\n\nDe exemplu, casa cu numărul `10` va fi interconectată cu casele cu numerele `1, 2, 5, 20, 30, ..., 14052020`.\n\nNumărul de conexiuni care trebuie realizate între toate cele `14052022` de case este egal cu:\n",
        "variante": [
          "233442104",
          "226416093",
          "219390082",
          "205338061",
          "248511938"
        ],
        "raspuns": "219390082",
        "dificultate": "mediu"
      },
      {
        "titlu": "Salturi",
        "enunt_markdown": "\nAlex joacă un joc. Inițial, acesta se află lipit cu spatele de perete.\n\nLa fiecare pas poate să facă un salt în față sau în spate de lungime egală cu `$$2^k$$` unități, unde k > 0.\n\nPentru a evita accidente, Alex nu va efectua saltul în spate dacă poziția rezultată va fi mai mică decât 0.\n\nCare este numărul minim de salturi necesare lui Alex pentru a ajunge la poziția `1340291`?\n",
        "variante": [
          "7",
          "8",
          "9",
          "10",
          "11"
        ],
        "raspuns": "8",
        "dificultate": "mediu"
      },
      {
        "titlu": "Pătrate perfecte",
        "enunt_markdown": "\nCare este numărul minim de pătrate perfecte necesar astfel încât suma acestora să fie `2022`?\n\nDe exemplu:\n\n- `$$2=1^2 + 1^2$$`, deci răspunsul pentru `2` este `2`.\n- `$$10=3^2 + 1^2$$`, deci răspunsul pentru `10` este tot `2`.\n- `$$100 = 10^2$$`, deci răspunsul pentru `100` este `1`.\n- `$$18 = 3^2 + 3^2$$`, deci răspunsul pentru `18` este `2`.\n",
        "variante": [
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "raspuns": "3",
        "dificultate": "mediu"
      },
      {
        "titlu": "Zaruri",
        "enunt_markdown": "\nPe masă se află 3 zaruri. Pe fiecare dintre cele 6 fețe ale zarurilor e inscripționată câte o cifră.\n\nCifrele înscrise pe ficare zar sunt următoarele:\n\n```\nZ_1 ↦ [1, 3, 2, 4, 5, 7]\nZ_2 ↦ [1, 7, 6, 2, 1, 5]\nZ_3 ↦ [7, 9, 8, 2, 4, 21]\n```\n\nSpunem că un număr de 3 cifre se poate forma folosind zarurile dacă putem aranja cele 3 zaruri pe masă astfel încât fețele de sus să descrie acel număr.\n\nDe exemplu, putem forma numărul `562` folosind zarurile `Z_1`, `Z_2`, `Z_3` (în această ordine).\n\nCâte numere distincte de 3 cifre se pot forma cu cele 3 zaruri?\n",
        "variante": [
          "125",
          "317",
          "499",
          "521",
          "729"
        ],
        "raspuns": "521",
        "dificultate": "mediu"
      },
      {
        "titlu": "Semne plus/minus",
        "enunt_markdown": "\nPentru care din următoarele valori ale lui `n` există o alegere de semne plus/minus astfel încât expresia `$$1 \\pm 2 \\pm 3 \\pm 4 \\pm \\ldots \\pm n$$` să ia valoarea 0?\n",
        "variante": [
          "2021",
          "2022",
          "2023",
          "2025",
          "2026"
        ],
        "raspuns": "2023",
        "dificultate": "mediu"
      },
      {
        "titlu": "Funcție Simplă",
        "enunt_markdown": "\nSe consideră funcția:\n\n```C\nint h(int a, int b, int k)\n{\n    if (a <= 0) {\n        if (k == 1)\n            return a + b;\n        else\n            return b;\n    }\n    else\n        return h(a - b, b, k + 1);\n}\n```\n\nCare va fi valoarea expresiei `h(14052022, 23, 0)`?\n",
        "variante": [
          "14",
          "23",
          "2022",
          "610957",
          "14051999"
        ],
        "raspuns": "23",
        "dificultate": "mediu"
      },
      {
        "titlu": "Funcție Grea",
        "enunt_markdown": "\nConsiderăm funcția:\n\n```C\nconst int kLim = 1000000;\n\nvoid fun(int a, int b, int c)\n{\n    if (a > kLim || b > kLim || c > kLim)\n        return;\n    if (a != c && b != c)\n        cout << c << '\n';\n    fun(a + 1, b, c + b);\n    fun(a, b + 1, c + a);\n}\n```\n\nCare dintre următoarele numere va fi afișat la un moment dat ca urmare a apelului `fun(0, 0, 0)`?\n",
        "variante": [
          "361",
          "5051",
          "1787",
          "53411",
          "41"
        ],
        "raspuns": "361",
        "dificultate": "greu"
      },
      {
        "titlu": "Triunghiuri",
        "enunt_markdown": "\nAvem `10` bețe de lungimile:\n```\n3, 4, 5, 8, 10, 12, 14, 32, 57, 64\n```\n\nVrem să folosim unele dintre aceste bețe (posibil toate) pentru a construi conturul unui triunghi (punând bețele cap la cap). Pentru fiecare latură a triunghiului, putem folosi unul sau mai multe bețe. Triunghiul trebuie să aibă aria strict pozitivă.\n\nCâte arii distincte posibile poate avea un asemenea triunghi?\n",
        "variante": [
          "8193",
          "22",
          "55558",
          "11495",
          "105693",
          "234126",
          "17293",
          "16639",
          "132",
          "49763"
        ],
        "raspuns": "16639",
        "dificultate": "greu"
      },
      {
        "titlu": "Submulțimi",
        "enunt_markdown": "\nFie `S` suma tuturor elementelor tuturor submulțimilor cu `617` elemente ale mulțimii:\n```\n{ 1, 2, 3, ..., 1234 }\n```\n\nCâte cifre are S?\n",
        "variante": [
          "325",
          "376",
          "392",
          "404",
          "415",
          "427",
          "440",
          "455",
          "467",
          "489"
        ],
        "raspuns": "404",
        "dificultate": "greu"
      },
      {
        "titlu": "Apariții",
        "enunt_markdown": "\nAlex are vedenii. Cum stă pe facebook să citească update-uri de la prieteni în loc să învețe pentru examenul de mâine, acesta începe să vadă cuvântul `picat` printre postări.\n\nDat fiind un șir de caractere `s` format din literele mici ale alfabetului englez (fără diacritice) și semne de punctuație reprezentând o postare, o apariție a cuvântului \"picat\" este determinată de numerele `a_1 < a_2 < a_3 < a_4 < a_5`, astfel încât:\n\n* `s[a_1] = 'p'`\n* `s[a_2] = 'i'`\n* `s[a_3] = 'c'`\n* `s[a_4] = 'a'`\n* `s[a_5] = 't'`\n\nDouă apariții se consideră diferite dacă cel puțin unul dintre numerele `a_1`, `a_2`, `a_3`, `a_4` sau `a_5` este diferit în cele două apariții.\nAlex tocmai a citit următoarea postare:\n\n```\nAzi am putut in sfarsit ca din intamplare sa vizitez muzeul cunoscut al satului: cand am pasit acolo am simtit ca totul este minunat.\n```\n\nCâte apariții ale cuvântului `picat` există în această postare?\n",
        "variante": [
          "665",
          "714",
          "1923",
          "2154",
          "1315",
          "1276",
          "956",
          "1672",
          "1024",
          "1948"
        ],
        "raspuns": "1672",
        "dificultate": "greu"
      }
    ],
    "pdf_etapa_1_link": "./pdfs/2022-etapa-I-A.pdf",
    "pdf_etapa_2_link": [
      "./pdfs/2022-felinare.pdf",
      "./pdfs/2022-cazane.pdf",
      "./pdfs/2022-tren.pdf",
      "./pdfs/2022-vopsea.pdf"
    ]
  },
  {
    "name": "Ediția 2021",
    "probleme": [
      {
        "titlu": "Număr divizibil cu 7",
        "enunt_markdown": "\nCare este ultima cifră a celui mai mare număr de 7 cifre, divizibil cu 7, care conține în componența sa doar cifre strict mai mici decât 7?\n",
        "variante": [
          "0",
          "2",
          "3",
          "5",
          "6"
        ],
        "raspuns": "0",
        "dificultate": "usor"
      },
      {
        "titlu": "Parte întreagă superioară",
        "enunt_markdown": "\nCare expresie implementează corect `$$\\lceil \\frac{n}{k} \\rceil$$` pentru toate perechile `n, k` de numere naturale nenule?\n\nNotații:\n * `$$\\lceil a\\rceil$$` reprezintă partea întreagă superioară a numărului real `a`, spre exemplu `$$\\lceil 2.8\\rceil = 3$$`.\n * `[n / k]` reprezintă câtul împărțirii lui `n` la `k` și `n mod k` reprezintă restul împărțirii lui `n` la `k`).\n",
        "variante": [
          "[n / k]",
          "[(n+k) / k]",
          "[(n+k-1) / k]",
          "[n / (k-1)]",
          "[n / k] + (n mod k)"
        ],
        "raspuns": "[(n+k-1) / k]",
        "dificultate": "usor"
      },
      {
        "titlu": "Funcție",
        "enunt_markdown": "\nConsiderăm următorul cod scris în limbajul C++ / Pascal:\n\n```C\nint f(int t[10000], int n) {\n    int i = 0, s = 0;\n    while (i < n) {\n        int j = i + 1;\n        while (j < n && t[i] == t[j])\n            j += 1;\n        s += 1;\n        i = j;\n    }\n    return s;\n}\n```\n\n```Pascal\nfunction f(t : MyArray; n : Integer) : Integer;\nvar i, s, j : Integer;\nbegin\ni := 0; s := 0;\nwhile i < n do begin\n    j := i + 1;\n    while (j < n) and (t[i] = t[j]) do\n        j := j + 1;\n    s := s + 1;\n    i := j;\nend;\nf := s;\nend;\n```\n\nDefiniții:\n * O subsecvență a lui `t` este o listă de valori aflate pe poziții consecutive crescătoare, e.g., `[t[3], t[4], t[5]]`.\n * Un subșir al lui `t` este o listă de valori aflate pe poziții ordonate crescător (nu neapărat consecutive), e.g., `[t[3], t[5], t[9]]`.\n * \nPresupunând că tabloul `t` este format din `n` numere ordonate crescător, precizați ce returnează `f(t, n)`:\n",
        "variante": [
          "numărul valorilor distincte din tabloul t",
          "lungimea maximă a unei subsecvențe din tabloul t formată din valori egale",
          "numărul subsecvențelor strict crescătoare din tabloul t",
          "lungimea maximă a unui subșir din tabloul t format din valori egale",
          "numărul valorilor care se repetă de cel puțin două ori din tabloul t"
        ],
        "raspuns": "numărul valorilor distincte din tabloul t",
        "dificultate": "usor"
      },
      {
        "titlu": "Schimb de cărți de vizită",
        "enunt_markdown": "\nÎntr-o sală de conferințe sunt mai multe persoane, fiecare având o rezervă suficient de mare de cărți de vizită.\n\nȘtiind că oricare două persoane pot să facă schimb de cărți de vizită cel mult o dată și s-au efectuat `23052021` de schimburi, care este numărul minim de persoane care se pot afla în sală?\n",
        "variante": [
          "4801",
          "4802",
          "4803",
          "6790",
          "6791"
        ],
        "raspuns": "6791",
        "dificultate": "usor"
      },
      {
        "titlu": "Arbori parțiali",
        "enunt_markdown": "\nPentru un graf `G`, un arbore parțial este un graf conex, fără cicluri, conținând același număr de noduri ca `G` și doar muchii din `G` (dar nu neapărat toate).\n\nNumărul de arbori parțiali ai grafului de mai jos este egal cu:\n",
        "variante": [
          "12",
          "11",
          "9",
          "15",
          "16"
        ],
        "raspuns": "11",
        "dificultate": "usor",
        "imagine": "./images/2021-arbori-partiali.png"
      },
      {
        "titlu": "Pseudo-palindrom",
        "enunt_markdown": "\nUn număr natural se numește palindrom dacă se citește la fel de la stânga la dreapta și de la dreapta la stânga.\n\nSpre exemplu, `13231` și `2662` sunt palindromuri, dar `145` sau `1234322` nu sunt.\n\nUn număr natural se numește pseudo-palindrom dacă cifrele sale pot fi reordonate astfel încât să devină palindrom (în particular orice palindrom este și pseudo-palindrom).\n\nSpre exemplu, `13321` și `2626` sunt pseudo-palindromuri.\n\nFie `X` cel mai mare număr pseudo-palindrom mai mic sau egal cu `1000465`. Care este restul lui `X` la împărțirea cu `37`?\n",
        "variante": [
          "36",
          "4",
          "1",
          "35",
          "25"
        ],
        "raspuns": "35",
        "dificultate": "usor"
      },
      {
        "titlu": "Adunare",
        "enunt_markdown": "\nSe dă următoarea adunare:\n\n```\nERAM + MARE = MARET\n```\n\nFiecare majusculă reprezintă o cifră (nu neapărat distinctă de celelalte).\n\nFiind primele cifre ale numerelor, cifrele corespunzătoare lui `M` și `E` trebuie să fie diferite de 0.\n\nCare este valoarea sumei `M + A + R + E + T`?\n",
        "variante": [
          "21",
          "7",
          "16",
          "18",
          "30"
        ],
        "raspuns": "18",
        "dificultate": "usor"
      },
      {
        "titlu": "Creioane",
        "enunt_markdown": "\nIonel are 10 creioane. Lungimile fiecărui creion sunt:\n\n```\n4, 3, 7, 8, 7, 4, 5, 8, 13, 15\n```\n\nEl își dorește să obțină creioane având doar două lungimi diferite. Pentru a realiza acest lucru, el poate scurta (prin ascuțire) unele creioane.\n\nCare este suma maximă a lungimilor creioanelor pe care o poate obține Ionel, după ce efectuează operațiile?\n",
        "variante": [
          "46",
          "50",
          "54",
          "56",
          "62"
        ],
        "raspuns": "54",
        "dificultate": "usor"
      },
      {
        "titlu": "Mulțime 13-liberă",
        "enunt_markdown": "\nO mulțime de numere naturale se numește 13-liberă dacă nu putem obține numărul 13 ca sumă a unor elemente **distincte** din mulțime.\n\nSpre exemplu, mulțimea `{ 1, 5, 7, 11 }` nu este 13-liberă fiindcă `1 + 5 + 7 = 13`, dar mulțimea `{ 1, 5, 6 }` este 13-liberă (notați că deși `1 + 6 + 6 = 13`, condiția descrisă nu este încălcată, 6 fiind folosit de două ori).\n\nCare este cardinalul maxim al unei submulțimi 13-libere a mulțimii `1, 2, 3, ..., 10`?\n",
        "variante": [
          "5",
          "4",
          "3",
          "6",
          "8"
        ],
        "raspuns": "5",
        "dificultate": "usor"
      },
      {
        "titlu": "Număr prim",
        "enunt_markdown": "\nFie `n` cel mai mare număr natural **prim** de 5 cifre cu toate cifrele distincte.\nCare este restul împărțirii lui `n` la 37?\n",
        "variante": [
          "27",
          "4",
          "11",
          "15",
          "31"
        ],
        "raspuns": "15",
        "dificultate": "usor"
      },
      {
        "titlu": "Pași",
        "enunt_markdown": "\nVă amintiți de Cristian cel neastâmpărat? Tatăl lui s-a hotărât să îl învețe puțină aritmetică.\n\nEl spune că de la un număr natural `x` se poate ajunge la un număr natural `y` (`y > x`) trecând prin numerele dintre ele utilizând o secvență de pași.\n\nLungimea fiecărui pas este pozitivă și poate fi:\n * Egală cu lungimea pasului anterior, sau\n * Mai mare cu 1, sau\n * Mai mare cu 1.\n\nLungimile primului și ultimului pas trebuie să fie egale cu 1.\n\nProblema dată lui Cristian este de a găsi numărul minim de pași prin care se poate ajunge de la `2021` la `3110`. Ce să aleagă Cristian?\n",
        "variante": [
          "64",
          "65",
          "66",
          "67",
          "68"
        ],
        "raspuns": "65",
        "dificultate": "mediu"
      },
      {
        "titlu": "Postere",
        "enunt_markdown": "\nPrimarul P. are de acoperit un perete lung de 100 m și înalt de 1 m, pe care vrea să îl împânzească cu postere publicitare.\n\nÎn acest sens, a cumpărat 8 postere, de înălțime egală cu 1 m și lățimile (exprimate în metri):\n\n```\n12, 27, 13, 25, 26, 38, 28, 38\n```\n\nEl va trebui să aranjeze posterele de-a lungul peretelui. Posterele nu au voie să se suprapună și nu pot depăși marginile peretelui.\n\nCare este aria maximă de perete pe care o poate acoperi folosind posterele cumpărate (exprimată în `$$m^2$$`)?\n",
        "variante": [
          "93",
          "94",
          "95",
          "96",
          "97"
        ],
        "raspuns": "94",
        "dificultate": "mediu"
      },
      {
        "titlu": "Triunghi infinit",
        "enunt_markdown": "\nConsiderăm triunghiul infinit de mai jos, format din numere naturale, în care numărul 1 se află la nivelul 1, numerele 2 și 3 se află la nivelul 2, numerele 4, 5 și 6 se află la nivelul 3 și așa mai departe.\n\nPentru un anumit nivel `k`, vrem să calculăm suma numerelor din **interiorul** triunghiului care se oprește la nivelul `k`.\n\nSpre exemplu, pentru nivelul `k = 5` numerele din interiorul triunghiului creat sunt `5, 8, 9`, și suma lor este `22`, iar pentru `k = 7` numerele din interiorul triunghiului creat sunt `5, 8, 9, 12, 13, 14, 17, 18, 19, 20` și suma lor este `135`.\n\nCalculați suma numerelor din interiorul triunghiului care se oprește la nivelul `k = 2021`.\n",
        "variante": [
          "2076403516157",
          "2080520640766",
          "2080520640767",
          "2084643884965",
          "2084643884966"
        ],
        "raspuns": "2080520640766",
        "dificultate": "mediu",
        "imagine": "./images/2021-triunghi-infinit.png"
      },
      {
        "titlu": "Domino",
        "enunt_markdown": "\nFie `A` o matrice binară cu 50 de linii și 50 de coloane (numerotate de la 1 la 50).\n\nCelula de pe rândul `i` și coloana `j` conține valoarea 1 dacă și numai dacă numărul `$$50 \\cdot (i-1) + j$$` se divide cu 7 **sau** cu 13, altfel conține valoarea 0.\n\nVrem să plasăm un singur \"domino\" (piesă de mărime `$$1 \\times 2$$` sau `$$2 \\times 1$$`) în matrice. Domino-ul trebuie să acopere 2 celule vecine (pe orizontală sau verticală) de 0 ale matricei.\n\nÎn câte feluri putem face acest lucru?\n",
        "variante": [
          "1479",
          "1480",
          "1520",
          "2959",
          "3039"
        ],
        "raspuns": "2959",
        "dificultate": "mediu"
      },
      {
        "titlu": "Algoritm de acoperire",
        "enunt_markdown": "\nConsiderăm următorul algoritm de acoperire a unei sume de bani, folosind bancnotele disponibile în portofel:\n\nCât timp suma este neacoperită și avem în portofel o bancnotă de valoare mai mică sau egală cu suma, alegem cea mai mare bancnotă de acest tip, scoatem bancnota din portofel și reducem suma cu valoarea ei.\n\nDacă algoritmul se încheie cu suma 0, a reușit, altfel a eșuat.\n\nÎn funcție de configurația de bancnote disponibile și suma de acoperit, e posibil ca acest algoritm să nu găsească o soluție deși ea există.\n\nSpre exemplu, dacă avem bancnotele `{1, 1, 4, 5, 6}` și trebuie să acoperim suma `S = 9`, algoritmul va selecta bancnotele `6, 1, 1`, după care se va bloca, fiindcă nu mai poate acoperi suma rămasă (egală cu 1). Totuși, există soluția `{4, 5}` care acoperă complet suma. Numim o astfel de configurație de bancnote disponibile, respectiv sumă de acoperit, un contraexemplu pentru algoritmul descris.\n\nFie `S_MIN` cea mai mică sumă de acoperit care apare într-un contraexemplu construit doar cu tipurile de bancnote românești aflate în circulație, anume: `{1, 5, 10, 50, 100, 200, 500}`. Fiecare tip de bancnotă poate fi folosit de oricâte ori (inclusiv deloc).\n\nCare este restul lui `S_MIN` la împărțirea cu 37?\n",
        "variante": [
          "13",
          "3",
          "8",
          "18",
          "23"
        ],
        "raspuns": "8",
        "dificultate": "mediu"
      },
      {
        "titlu": "Dreptunghiuri",
        "enunt_markdown": "\nCâte dreptunghiuri distincte sunt în figura următoare?\n\n```\n+------+---+---+---+---+\n|      |   |   |   |   |\n+--+---+   +---+   |   |\n|  |   |   |   |   |   |\n+--+---+---+---+---+   |\n|  |       |       |   |\n+--+---+---+---+---+---+\n|      |   |   |       |\n+------+---+---+-------+\n```\n\n",
        "variante": [
          "43",
          "44",
          "45",
          "46",
          "47"
        ],
        "raspuns": "43",
        "dificultate": "mediu"
      },
      {
        "titlu": "Ecuație",
        "enunt_markdown": "\nPe masă este scrisă ecuația `a + b = c`. După un cutremur masiv, s-au permutat toate cifrele și semnele matematice între ele și s-a obținut o nouă \"ecuație\" (evident, greșită):\n\n```\n129129851 = 29552 + 1177003\n```\n\nCare ar fi putut fi valoarea inițială a lui `c`?\n",
        "variante": [
          "8739191",
          "3001892",
          "3072104",
          "3735094",
          "5790835",
          "7192195",
          "8952530",
          "15038950",
          "15111922",
          "15839920"
        ],
        "raspuns": "15111922",
        "dificultate": "greu"
      },
      {
        "titlu": "Date robuste",
        "enunt_markdown": "\nÎn această problemă ne vom referi la date calendaristice care țin cont de an, lună, zi, ora și minut.\n\nSpunem că o astfel de dată este robustă dacă putem deduce în mod unic la ce dată validă se referă o mulțime de numere, fără să știm corespondența dintre valori și câmpurile datei.\n\nSpre exemplu, având valorile `{3, 20, 30, 53, 2021}`, știm că nu poate fi vorba decât de `30.03.2021 20:53`, deci această dată este robustă. Pe de altă parte, data `23.05.2021 20:53` nu este robustă, deoarece mulțimea `{5, 20, 23, 53, 2021}` poate identifica și alte date (de exemplu, `20.05.2021 23:53`).\n\nCâte date între `01.01.2021 00:00` și `31.12.2021 23:59` (inclusiv) sunt robuste?\n\nO dată este validă dacă ora este în intervalul `[0, 23]`, minutul în `[0, 59]`, luna în `[1, 12]`, ziua în intervalul corespunzător lunii respective conform calendarului anului 2021.\n",
        "variante": [
          "27412",
          "29568",
          "35797",
          "37409",
          "44382",
          "44516",
          "46870",
          "512260",
          "525600",
          "535680"
        ],
        "raspuns": "44382",
        "dificultate": "greu"
      },
      {
        "titlu": "Secret",
        "enunt_markdown": "\nConsiderăm 7 copii (identificați prin numere de la 1 la 7) și relațiile de prietenie (bidirecționale):\n\n```\n{(1, 2), (4, 5), (4, 6), (6, 7), (7, 2), (4, 2), (3, 1), (5, 6), (4, 3), (3, 2)}\n```\n\nÎn ziua 0, copilul 5 află de la profesoară un secret (că aceasta vrea să organizeze o onomastică pentru copilul 2 la sfârșitul celei de-a 4-a zi).\n\nÎn fiecare dintre următoarele 4 zile, se întâmplă următorul lucru:\n\nFiecare copil care știe secretul își alege exact un prieten aleator (echiprobabil din lista lui de prieteni) și îi comunică și lui secretul (se poate întâmpla ca un copil să comunice secretul de mai multe ori aceluiași prieten, în zile diferite).\n\nAstfel, noi copii pot afla secretul, pe care îl vor comunica în continuare începând cu zilele următoare.\n\nCare este probabilitatea pentru copilul 2 să afle secretul cel târziu la sfârșitul celei de-a 4-a zi?\n\n_Alegeți varianta cea mai apropiată de răspunsul real._\n",
        "variante": [
          "0%",
          "26%",
          "32%",
          "44%",
          "58%",
          "68%",
          "76%",
          "85%",
          "94%",
          "100%"
        ],
        "raspuns": "68%",
        "dificultate": "greu"
      },
      {
        "titlu": "Angajați",
        "enunt_markdown": "\nCompania _Grigorescu: Grile, grătare și grilaje_ are 7 angajați. Ziua de mâine are un total de 1440 de minute. Fiecare angajat știe exact câte minute poate lucra mâine. Aceste valori sunt date de șirul:\n\n```\n480, 360, 333, 1000, 285, 560, 15\n```\n\nUn angajat care poate lucra `X` minute poate alege orice interval continuu de `X` minute care începe la minut fix și este inclus complet în cele 1440 de minute ale zilei.\n\nAngajații vor să-și coordoneze alegerile astfel încât oricare doi dintre ei să aibă cel puțin un minut comun în program.\n\nCâte configurații de alegeri satisfac această cerință? Răspunsul este foarte mare, deci suntem interesați de restul acestui număr la împărțirea cu `1000000007`.\n\nO configurație `A` diferă de o configurație `B` dacă există cel puțin un angajat care și-a ales un anumit interval în `A` și un interval diferit în `B`.\n",
        "variante": [
          "82930407",
          "195773645",
          "231919841",
          "353129100",
          "371820425",
          "469187746",
          "715377483",
          "67843200",
          "802170567",
          "918401827"
        ],
        "raspuns": "195773645",
        "dificultate": "greu"
      }
    ],
    "pdf_etapa_1_link": "./pdfs/2021-etapa-I.pdf",
    "pdf_etapa_2_link": [
      "./pdfs/2021-grile.pdf",
      "./pdfs/2021-kscale.pdf",
      "./pdfs/2021-secretariat.pdf",
      "./pdfs/2021-sort.pdf"
    ]
  }
]